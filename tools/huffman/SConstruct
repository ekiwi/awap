# SConstruct
# -*- coding: utf-8 -*-
#
# Copyright (c) 2015 Kevin Laeufer <kevin.laeufer@rwth-aachen.de>
#
# This file is part of awap.
#
#

env = Environment(toolpath=['../../ext/ekiwi-scons-tools/tools'], tools=['default', 'template'])

# import terminal type to enable gcc/clang to print colored output
# http://stackoverflow.com/questions/9922521/why-doesnt-clang-show-color-output-under-scons
import os, sys
env['ENV']['TERM'] = os.environ['TERM']

env.VariantDir(variant_dir='build', src_dir='src')

# flags for C and C++
env['CCFLAGS'] = [
	"-Os",
	"-gdwarf-3",
	"-Wall",
	"-Werror=maybe-uninitialized",
	"-Wformat",
	"-Wextra",
	"-Wundef",
	"-Winit-self",
	"-Wcast-qual",
	"-Wshadow",
	"-Wpointer-arith",
	"-Wunused",
	"-fdiagnostics-color=auto",
]

# C++ flags
env['CXXFLAGS'] = [
	"-std=c++14",
	"-Woverloaded-virtual",
	"-Wnon-virtual-dtor",
	"-Weffc++",
]

# huffman code progam
from huffman import HuffmanCode, HuffmanEncoder

# generate code
hc = HuffmanCode()
files = ['../../example/compression/TemperatureSensor.di',
	'../../example/compression/SimpleTemperatureConsumer.di']
for filename in files: hc.count_symbols_in_file(filename)
hc.generate()
code = hc.to_dict()

# encode files
Execute(Mkdir('temp'))
enc = HuffmanEncoder(hc)
for filename in files: 
	output = os.path.join('temp', os.path.basename(filename))
	enc.compress_file(filename, output)

# tell scons how to build encoder template
env.Template(target='build/generated/code.hpp', source='templates/code.hpp.in', substitutions=code)
env.Append(CPPPATH = ['build'])

# use util/slice.hpp from libawap-mote
libmote_inc = os.path.abspath(os.path.join('..', '..', 'lib', 'mote', 'cpp'))
env.Append(CPPPATH = [libmote_inc])

huffman = env.Program('build/huffman', env.Glob('build/*.cpp'))
env.Alias('huffman', huffman)

arguments = 'python/temp/TemperatureSensor.di ../../example/mote/hosted/build/ostfriesentee/app/TemperatureSensor/TemperatureSensor.di'
env.Alias('huffman.run', env.Command('run_huffman', huffman, '{} {}'.format(huffman[0].abspath, arguments)))

env.Default('huffman.run')
