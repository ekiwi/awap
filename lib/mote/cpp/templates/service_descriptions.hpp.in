/**
 * service_descriptions.hpp
 *
 * Copyright (c) 2015 Kevin Laeufer <kevin.laeufer@rwth-aachen.de>
 *
 * This file is part of awap.
 */

#ifndef GENERATED_SERVICE_DESCRIPTIONS_HPP
#define GENERATED_SERVICE_DESCRIPTIONS_HPP

#include <util.hpp>
#include <common.hpp>
#include <generated/configuration.hpp>
#include <jlib_awap-common.hpp>

namespace awap {
namespace generated {

struct ServiceDescription {

static constexpr size_t MaxPropBytes =
		divideCeil(generated::Configuration::MaxPropertyBitCount, 8u);
static constexpr size_t PropertyCount =
		divideCeil(MaxPropBytes, sizeof(uint32_t));

%% for service in services
using {{ service.name }}DescriptionStruct =
	::de::rwth_aachen::awap::service::{{ service.name }}Description::UnderlyingType;
%% endfor

static inline ServiceTypeId getServiceTypeId(ref_t java_desc) {
	// check Java class type
	auto descClassId = dj_vm_getRuntimeClass(dj_exec_getVM(), dj_mem_getChunkId(REF_TO_VOIDP(java_desc)));
	if(descClassId.infusion != ::awap::getAwapCommonInfusion().getUnderlying()) {
		return 255;	// class is not from the awap-common infusion
	}

	switch(descClassId.entity_id) {
%% for service in services
	case AWAP_COMMON_CDEF_de_rwth_aachen_awap_service_{{ service.name }}Description:
		return {{ service.id }};
%% endfor
	default:
		return 255;
	}
}

static inline bool toQueryMask(ref_t java_desc, Slice<uint32_t> mask) {
	// make sure output is large enough
	if(mask.length < PropertyCount) {
		return false;
	}

	// check Java class type
	auto descClassId = dj_vm_getRuntimeClass(dj_exec_getVM(), dj_mem_getChunkId(REF_TO_VOIDP(java_desc)));
	if(descClassId.infusion != ::awap::getAwapCommonInfusion().getUnderlying()) {
		return false;	// class is not from the awap-common infusion
	}

	// fill mask with zero
	for(size_t ii = 0; ii < PropertyCount; ++ii) {
		mask.data[ii] = 0;
	}

	// interpret output as uint8_t to reuse the code generated for marshalling
	// messages
	auto data = reinterpret_cast<uint8_t*>(mask.data);

	switch(descClassId.entity_id) {
%% for service in services
	case AWAP_COMMON_CDEF_de_rwth_aachen_awap_service_{{ service.name }}Description:
	{
	%% if service.properties | length > 0
		auto java_data = static_cast<const {{ service.name }}DescriptionStruct*>(REF_TO_VOIDP(java_desc));
	%% endif
	%% for prop in service.properties
		const {{ prop.cpp.unsigned_type }} {{ prop.name }} =
			(java_data->{{ prop.name }}DoNotCare)? 0 : (1<<{{ prop.size }}) - 1;
	%% endfor
		{{ service.cpp.marshal | indent(2) }}
		return true;
	}
%% endfor
	default:
		return false;
	}
}

}; // struct ServiceDescription
} // namespace generated
} // namespace awap

#endif // GENERATED_SERVICE_DESCRIPTIONS_HPP
