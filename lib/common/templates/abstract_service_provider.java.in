package de.rwth_aachen.awap.service;

import de.rwth_aachen.awap.LocalAgent;
import de.rwth_aachen.awap.RemoteAgent;
import de.rwth_aachen.awap.ServiceProvider;
import de.rwth_aachen.awap.TxMessage;
import de.rwth_aachen.awap.RxMessage;

public abstract class {{service.name}}Provider extends ServiceProvider {
%% for prop in service.properties
	public {{ prop.java.type }} {{ prop.name | camelCase }};
%% endfor
	public {{service.name}}Provider(LocalAgent parent{{ service.java.initializer_list }}) {
		super(parent);
%% for prop in service.properties
		this.{{ prop.name | camelCase }} = {{ prop.name | camelCase }};
%% endfor
	}
	// message handlers
%% for msg in service.messages
	%% if msg.rx
	public static class {{ msg.name }} extends RxMessage {
	%% for field in msg.fields
			public {{ field.java.type }} {{ field.name }};
	%% endfor
	}
	public abstract void onReceive({{ msg.name }} msg);
	%% endif
	%% if msg.tx
	public static class {{ msg.name }} extends TxMessage {
	%% for field in msg.fields
			public {{ field.java.type }} {{ field.name }};
	%% endfor
			public {{ msg.name }}(RemoteAgent receiver{{ msg.java.initializer_list }}){
				this.receiver = receiver;
		%% for field in msg.fields
				this.{{ field.name }} = {{ field.name}};
		%% endfor
			}
	}
	// public abstract void onFailedToSend({{ msg.name }} msg);
	public void send({{ msg.name }} msg) {
		msg.localServiceId = this.localServiceId;
		this.parent.send(msg);
	}
	%% endif
%% endfor
}

